Things I want my tour software to do (purely for my own use, not as a product):
>Generate brackets for swiss stage
>Calculate optimal number of rounds, based on minimum  number of rounds desired and how many players progress through to elimination stage (aim to minimise tiebreaks)
>Calculate countback and use it for seeding
>Generate graphical output for each round's matchups
>Store player info (Name, alias[username], [notes]teams used)
>Save all results
>Save all info about tour to .tour file (or something like that)
>Export tournament data to a database (may need to provide framework of how db is set up, also what kind of db it is)
>Also display some data as a spreadsheet (data grid)

Long term goals
>Support for all common formats (single/double elim, RR)
>Support for group stages
>Support for flexible multi-stage tours

Current task:

PLAN OF ATTACK=====
Create list of stageplayers based on tournament entrant list
Create script to generate list of matches
Create popup window to view all matches
Edit popup window so scores can be recorded
When round finished, progress to next round
When round finished, update data grid
When data grid entry clicked, display player info
Preview point distributions in popup window

===============

Regarding UI, probably want to put the text boxes for tour name/game over the buttons for new/save/load. Actually this whole thing needs fixing up, as interactions are a fucking mess

Maybe tab between first and second stages
Setting up tour- want to have an add player form, where I add all the info necessary for a new player.
Also want to display players already registered, and the number of participants
Option to view player info
Option to preview point distribution/bracket. Use this to determine no. of rounds
Option to set number of rounds
Option to close signups
Consider adding all generic tour info (player list, tour name and game) to separate tab. Currently it's all in swiss tab, which is bad for future modifications
Stage windows should probably consist of player filter options, standings, and menu options to manipulate that stage, progress rounds, etc.

Player index could be converted to just an ID rather than mirroring the index of the player object, and then to find a specific player just iterate through the list and find the matching id. This would probably be easier to implement

Things to do later===========
>Error message for trying to save a null tour
>Input validation for adding a new player
>Error message for somehow setting a player index <-1 (technically <0, but -1 is already handled)

Classes I will need:
Tour class (Date, What is being played, List of players, List of stages)
Stage Class(Type of stage (swiss, elim, etc), List of rounds, List of players)
Class for each type of stage (inherits from stage obviously)
Player class (Screen name, Real name, email, contact No.)
Player class for each stage (inherits from player obviously).
